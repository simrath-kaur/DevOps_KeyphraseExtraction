pipeline {
    agent any

    environment {
        REPO_URL = 'https://github.com/simrath-kaur/DevOps_KeyphraseExtraction'
        BRANCH = 'main'  // Ensure this is the correct branch name
        DOCKER_IMAGE = 'simrathkaur/devops_keyphrase_extraction'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    retry(3) { // Retry in case of transient issues
                        git branch: env.BRANCH, url: env.REPO_URL
                    }
                }
            }
        }

        stage('Prepare Files') {
            steps {
                script {
                    // Ensure necessary directories exist in the workspace
                    sh 'mkdir -p GloVe/glove.6b/'
                    sh 'mkdir -p models/'

                    // Copy the manually downloaded files to the workspace
                    sh 'cp /home/simrath/KeyphraseExtraction/models/epoch=3.ckpt models/epoch=3.ckpt'
                    sh 'cp /home/simrath/KeyphraseExtraction/GloVe/glove.6B/glove.6B.100d.txt GloVe/glove.6B/glove.6B.100d.txt'
                    
                    // Debug: List the files in the workspace to ensure they are copied correctly
                    sh 'ls -l models/'
                    sh 'ls -l GloVe/glove.6b/'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Debug: Ensure files are present in the workspace before building
                    sh 'ls -l models/'
                    sh 'ls -l GloVe/glove.6b/'
                    
                    // Build the Docker image
                    docker.build(env.DOCKER_IMAGE, ".")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Log in to Docker Hub
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials') {
                        // Push the Docker image
                        docker.image(env.DOCKER_IMAGE).push()
                    }
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Run the Docker container
                    sh 'docker run -d --rm -p 5551:5551 simrathkaur/devops_keyphrase_extraction:latest'
                }
            }
        }
    }

    post {
        always {
            // Clean up after the build
            cleanWs()
        }
    }
}
